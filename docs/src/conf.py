# -*- coding: utf-8 -*-
#
# pymunk documentation build configuration file, created by
# sphinx-quickstart on Sun Jun 03 03:50:06 2012.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import sys

# To allow readthedocs.org build documentation without the chipmunk library file


class Mock(object):
    # __package__ = 'pymunk._chipmunk_cffi_abi'
    def __init__(self, *args, **kwargs):
        # print("init", args, kwargs)
        pass

    def __call__(self, *args, **kwargs):
        # print("call", args, kwargs)
        return Mock()

    @classmethod
    def __getattr__(cls, name):
        # print("getattr", cls, name)
        if name in ("__file__", "__path__"):
            return "/dev/null"
        elif name[0] == name[0].upper():
            return type(name, (), {})
        else:
            return Mock()


MOCK_MODULES = [
    # 'pymunk._chipmunk_cffi',
    #'pymunk._chipmunk_cffi_abi',
    #'_chipmunk_cffi',
    #'_chipmunk_cffi_abi',
    #'._chipmunk_cffi','_chipmunk_cffi',
    "pymunk._chipmunk",
    "_cffi_backend",
    "matplotlib",
    "matplotlib.pyplot",
    "pygame",
    "pygame.locals",
    "pygame.color",
    "pyglet",
]


class MockFinder(object):
    def find_module(self, fullname, path=None):
        # if "cffi" in fullname:
        #    print("CFFI!!!", fullname, path)
        return self if fullname in MOCK_MODULES else None

    def load_module(self, fullname):
        return sys.modules[fullname] if fullname in sys.modules else Mock()


# sys.meta_path.insert(0, MockFinder())

# print(sys.meta_path)

for m in MOCK_MODULES:
    sys.modules[m] = Mock()
# sys.modules.update((mod_name, Mock()) for mod_name in MOCK_MODULES)

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('.'))

sys.path.insert(0, os.path.abspath("."))
sys.path.insert(0, os.path.abspath("../.."))
# print("path", sys.path)
# import pymunk
# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [  #'sphinx.ext.autodoc',
    "sphinx.ext.viewcode",
    "sphinx.ext.autosummary",
    "ext.autoexample",
    "aafigure.sphinxext",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix of source filenames.
source_suffix = ".rst"

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = "index"

# General information about the project.
project = u"pymunk"
copyright = u"2013-2022, Victor Blomqvist"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
# version = '3.0'
# The full version, including alpha/beta/rc tags.
# release = '3.0.0'

import pymunk

version = pymunk.version
release = version

print("Documentation for Pymunk", version)

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_templates"]

# The reST default role (used for this markup: `text`) to use for all documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# A list of ignored prefixes for module index sorting.
modindex_common_prefix = ["pymunk."]

methodindex_common_prefix = ["pymunk."]

classindex_common_prefix = ["pymunk."]


suppress_warnings = ["image.nonlocal_uri"]
# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = "alabaster"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
# html_theme_options = {}
# #a0c0ff #b8d0ff #cbdcff #345aa6
# #eeeeee #000000

# 355F7C 6c9cbe 82a5be 113651

# color palette #a0c0ff #345aa6 #EEEEEE #000000

# color palette #355F7C #6c9cbe #EEEEEE #000000 (unused: #82a5be #113651 #354c5d)

html_theme_options = {
    "font_family": '"Lucida Grande",Arial,sans-serif',
    "head_font_family": '"Lucida Grande",Arial,sans-serif',
}
# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
# html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = "_static/pymunk_logo_sphinx.png"

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = "_static/pymunk_favicon.ico"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


# html_style = "pymunk.css"

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
# html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
html_sidebars = {
    "**": [
        "badges.html",
        "globaltoc.html",
        "relations.html",
        "sourcelink.html",
        "searchbox.html",
    ],
}

# html_sidebars = {'[rieta]*': ['globaltoc.html', 'relations.html', 'sourcelink.html', 'searchbox.html'],
#                 'pymunk*': ['globaltoc.html', 'classtoc.html', 'relations.html', 'sourcelink.html', 'searchbox.html']}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = "pymunkdoc"


# -- Options for LaTeX output --------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
    ("index", "pymunk.tex", u"pymunk Documentation", u"Victor Blomqvist", "manual"),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", "pymunk", u"pymunk Documentation", [u"Victor Blomqvist"], 1)]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output ------------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        "index",
        "pymunk",
        u"pymunk Documentation",
        u"Victor Blomqvist",
        "pymunk",
        "One line description of project.",
        "Miscellaneous",
    ),
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# Code to make sphinx always include the __init__ method in autodocs
# def skip(app, what, name, obj, skip, options):
#    if name == "__init__":
#        return False
#    return skip

# def setup(app):
#    app.connect("autodoc-skip-member", skip)
autodoc_default_options = {
    "members": True,
    "undoc-members": True,
    "show-inheritance": True,
    "inherited-members": True,
    # "member-order": "bysource",
    # "special-members": "__init__, __add__"
    #'exclude-members': '__weakref__'
}
